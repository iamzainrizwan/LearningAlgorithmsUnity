@startuml
struct "UnsafeRingQueue`1"<T> {
    + <<readonly>> IsEmpty : bool <<get>>
    + <<readonly>> Length : int <<get>>
    + <<readonly>> Capacity : int <<get>>
    + UnsafeRingQueue(ptr:T*, capacity:int)
    + UnsafeRingQueue(capacity:int, allocator:AllocatorManager.AllocatorHandle, options:NativeArrayOptions)
    + <<readonly>> IsCreated : bool <<get>>
    + Dispose() : void
    + Dispose(inputDeps:JobHandle) : JobHandle
    + TryEnqueue(value:T) : bool
    + Enqueue(value:T) : void
    + TryDequeue(item:T) : bool
    + Dequeue() : T
}
class "UnsafeRingQueueDebugView`1"<T> <<sealed>> {
    + UnsafeRingQueueDebugView(data:UnsafeRingQueue<T>)
}
INativeDisposable <|-- "UnsafeRingQueue`1"
@enduml
