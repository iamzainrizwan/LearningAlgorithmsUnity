@startuml
class DrawScreenSpaceUIPass {
    + DrawScreenSpaceUIPass(evt:RenderPassEvent, renderOffscreen:bool)
    + {static} ConfigureColorDescriptor(descriptor:RenderTextureDescriptor, cameraWidth:int, cameraHeight:int) : void
    + {static} ConfigureDepthDescriptor(descriptor:RenderTextureDescriptor, depthStencilFormat:GraphicsFormat, cameraWidth:int, cameraHeight:int) : void
    + Dispose() : void
    + Setup(cameraData:UniversalCameraData, depthStencilFormat:GraphicsFormat) : void
    + <<override>> OnCameraSetup(cmd:CommandBuffer, renderingData:RenderingData) : void
    + <<override>> Execute(context:ScriptableRenderContext, renderingData:RenderingData) : void
}
class PassData {
}
class UnsafePassData {
}
ScriptableRenderPass <|-- DrawScreenSpaceUIPass
DrawScreenSpaceUIPass +-- PassData
DrawScreenSpaceUIPass +-- UnsafePassData
@enduml
